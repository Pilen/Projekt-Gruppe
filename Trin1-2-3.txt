Trin 1:
Main
Beskrivelse.1: Metoden 'main' er hvor man typisk starter spillet op.
    Det er der man fortæller python at den skal starte op Pygame, (pygame.init), 
    og det er også den metode som tegner op det første billede som man ser 
    når man starter spillet, (dette kan være spillets startside, eller det første
    level i spillet, m.m.). Metoden 'main' er det første metode som åbnes når spillet
    er åbnet, og via denne metode holder man spillet kørende ved hjælp af en anden klasse
    eller metode, (dog dette bliver diskuteret ved næste trin).


1. Definér metoden main(), hvor dens funktionalitet er at starte pygame. Der skal ikke
   behøves input.

Hints: Kommandoen for at åbne pygame er 'pygame.init'.
       Husk at indentere korrekt.


Note: Skal nok inkludére en ny beskrivelse som forklarer hvordan pygame tegner
      op en baggrund.

2. Ved brug af den baggrund som er suppleret, inkluder en ny funktion i main(), som skal
   kunne åbne baggrunden, og tegne den op som en baggrund. 

Hints: Gør brug af blitting for at tegne baggrunden.
       Husk også at display.flip for at opdatere baggrunden.



MainBeskrivelse.3: Noget som man skal huske med en main metode er at man skal få python
    til at starte metoden når spillet startes. Dette opnås ved et velkendt trick i
    python hvor man får python til at tjekke for et variabel, __name___, er lig med 
    __main__, (hvor __name__ er hvad python navngiver det modul det kører).


3. Sørg for at metoden main startes op når spillet startes.

Hints: Dette skal gøres udenfor metoden "main", da Python ikke vil starte main før
      den får besked for det.

       Husk at når du skal sammenligne hvad et variabel er, så hvis det er et string
     skal teksten omringes med "".

       Et if statement skal gerne bruges i løsningen.

Trin 2:
Mainloop
Beskrivelse.1: Hvis main metoden starter spillet op, er spillets mainloop det 
    som holder spillet kørende. Mainloop udføres via main metoden, og det er fra
    mainloopen at de klasser som opdatere spillet, eller modtager inputs, køres.


1. Lav en ny metode, mainloop(), som igen tager ingen input. Den skal kunne køres
   automatisk når spillet startes.

Hints: En populær måde at få mainloopen til at køre i uendelig løkke er at bruge et 
      while statement. While True virker da python antager at true forbliver true.
 
       Husk at mainloop skal startes op når main er startet op.

Trin 3:
Player
Beskrivelse.1: Når man vil tilføje en spiller, skal man først lave en spillerklasse, (som vi kalder player). De forskellige     klasser holder styr på de forskellige dele af spillet, ergo player klassen holder styr på spilleren.
    De ting som holdes styr i denne klasse er ting som selve initialiseringen af spilleren, spilleren bliver opdateret,
    samt de variabler som tilføjes til spilleren, (som for eksempel guld). Hvad typisk bruges til at tegne de forskellige
    modeller, (som for eksempel player), er et indbygget funktion i pygame, pygame.sprite.Sprite.

1. Lav en ny klasse, player, hvor dens funktioner er at starte op player, samt at tegne spilleren, (brug en af de billeder som
   er forberedt på forhånd som spillerens grafik). Disse to funktioner skal kunne udføres fra en metode, __init__(self, x, y).

Hints: Husk at mainloopen holder alle de relevante dele af spillet i gang.
       __init__'s input skal være de koordinater som man vil have spilleren til at spawne.
       